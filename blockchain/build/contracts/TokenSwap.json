{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount1",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token2",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount2",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "amount1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amount2",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "getOwner2Address",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token1",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token2",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/mehran/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/IERC20.sol",
    "1": "contracts/TokenSwap.sol"
  },
  "ast": {
    "absolutePath": "contracts/TokenSwap.sol",
    "exportedSymbols": {
      "IERC20": [
        224
      ],
      "TokenSwap": [
        146
      ]
    },
    "id": 147,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "/home/mehran/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 147,
        "sourceUnit": 225,
        "src": "57:56:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TokenSwap",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 146,
        "linearizedBaseContracts": [
          146
        ],
        "name": "TokenSwap",
        "nameLocation": "125:9:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "d21220a7",
            "id": 5,
            "mutability": "mutable",
            "name": "token1",
            "nameLocation": "155:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 146,
            "src": "141:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$224",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 4,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 224,
                "src": "141:6:1"
              },
              "referencedDeclaration": 224,
              "src": "141:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$224",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "73688914",
            "id": 7,
            "mutability": "mutable",
            "name": "owner1",
            "nameLocation": "182:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 146,
            "src": "167:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "167:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f400fde4",
            "id": 9,
            "mutability": "mutable",
            "name": "amount1",
            "nameLocation": "206:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 146,
            "src": "194:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "194:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "25be124e",
            "id": 12,
            "mutability": "mutable",
            "name": "token2",
            "nameLocation": "233:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 146,
            "src": "219:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$224",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 11,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 224,
                "src": "219:6:1"
              },
              "referencedDeclaration": 224,
              "src": "219:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$224",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "52709725",
            "id": 14,
            "mutability": "mutable",
            "name": "owner2",
            "nameLocation": "260:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 146,
            "src": "245:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "245:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "057bfcc7",
            "id": 16,
            "mutability": "mutable",
            "name": "amount2",
            "nameLocation": "284:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 146,
            "src": "272:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "272:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "465:186:1",
              "statements": [
                {
                  "expression": {
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "475:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$224",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31,
                          "name": "_token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "491:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 30,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "484:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$224_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "484:15:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$224",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "475:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$224",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "475:24:1"
                },
                {
                  "expression": {
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35,
                      "name": "owner1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "509:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 36,
                      "name": "_owner1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "518:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "509:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "509:16:1"
                },
                {
                  "expression": {
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39,
                      "name": "amount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "535:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40,
                      "name": "_amount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "545:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "535:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "535:18:1"
                },
                {
                  "expression": {
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 43,
                      "name": "token2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "563:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$224",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 45,
                          "name": "_token2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "579:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "572:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$224_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "572:15:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$224",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "563:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$224",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "563:24:1"
                },
                {
                  "expression": {
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49,
                      "name": "amount2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "626:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50,
                      "name": "_amount2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "636:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "626:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "626:18:1"
                }
              ]
            },
            "id": 54,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "_token1",
                  "nameLocation": "327:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "319:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_owner1",
                  "nameLocation": "352:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "344:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "344:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "_amount1",
                  "nameLocation": "374:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "369:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "_token2",
                  "nameLocation": "400:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "392:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "392:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_amount2",
                  "nameLocation": "450:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "445:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "309:155:1"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "465:0:1"
            },
            "scope": 146,
            "src": "298:353:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "705:31:1",
              "statements": [
                {
                  "expression": {
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59,
                      "name": "owner2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "715:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 60,
                      "name": "_addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "724:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "715:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "715:14:1"
                }
              ]
            },
            "functionSelector": "2573bad5",
            "id": 64,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner2Address",
            "nameLocation": "666:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "691:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "683:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "682:15:1"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:0:1"
            },
            "scope": 146,
            "src": "657:79:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 117,
              "nodeType": "Block",
              "src": "765:449:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 68,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "783:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "783:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 70,
                          "name": "owner2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "797:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "783:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a6564",
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "805:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        },
                        "value": "Not authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
                          "typeString": "literal_string \"Not authorized\""
                        }
                      ],
                      "id": 67,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "775:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "775:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "775:47:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 78,
                              "name": "owner1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "870:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 81,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "886:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$146",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$146",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 80,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "878:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 79,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "878:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 82,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "878:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 76,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "853:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$224",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 183,
                            "src": "853:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "853:39:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 84,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "896:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "853:50:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e203120616c6c6f77616e636520746f6f206c6f77",
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "917:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_913cc2e227743c49c12085d5328512c34374077e86a7bb256c5b5a7b70c5c959",
                          "typeString": "literal_string \"Token 1 allowance too low\""
                        },
                        "value": "Token 1 allowance too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_913cc2e227743c49c12085d5328512c34374077e86a7bb256c5b5a7b70c5c959",
                          "typeString": "literal_string \"Token 1 allowance too low\""
                        }
                      ],
                      "id": 75,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "832:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "832:122:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "832:122:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 92,
                              "name": "owner2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "1002:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 95,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1018:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$146",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$146",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 94,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1010:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 93,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1010:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1010:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 90,
                              "name": "token2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "985:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$224",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 91,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 183,
                            "src": "985:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "985:39:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 98,
                          "name": "amount2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "1028:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "985:50:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e203220616c6c6f77616e636520746f6f206c6f77",
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1049:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43496126acaaa844c55b23285b37b88e7f10f924c5529c6e686236443cc71fda",
                          "typeString": "literal_string \"Token 2 allowance too low\""
                        },
                        "value": "Token 2 allowance too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43496126acaaa844c55b23285b37b88e7f10f924c5529c6e686236443cc71fda",
                          "typeString": "literal_string \"Token 2 allowance too low\""
                        }
                      ],
                      "id": 89,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "964:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "964:122:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "964:122:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 104,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "1115:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$224",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 105,
                        "name": "owner1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1123:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 106,
                        "name": "owner2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1131:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 107,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1139:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$224",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 103,
                      "name": "_safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "1097:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$224_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1097:50:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 111,
                        "name": "token2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1175:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$224",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 112,
                        "name": "owner2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1183:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 113,
                        "name": "owner1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1191:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 114,
                        "name": "amount2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1199:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$224",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 110,
                      "name": "_safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "1157:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$224_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1157:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1157:50:1"
                }
              ]
            },
            "functionSelector": "8119c065",
            "id": 118,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nameLocation": "751:4:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "755:2:1"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "765:0:1"
            },
            "scope": 146,
            "src": "742:472:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "1355:122:1",
              "statements": [
                {
                  "assignments": [
                    131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 131,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "1370:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 144,
                      "src": "1365:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 130,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1365:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 138,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 134,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "1396:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 135,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "1404:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 136,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "1415:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 132,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1377:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$224",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 205,
                      "src": "1377:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1377:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1365:57:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 140,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "1440:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e207472616e73666572206661696c6564",
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1446:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                          "typeString": "literal_string \"Token transfer failed\""
                        },
                        "value": "Token transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                          "typeString": "literal_string \"Token transfer failed\""
                        }
                      ],
                      "id": 139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1432:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1432:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "1432:38:1"
                }
              ]
            },
            "id": 145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransferFrom",
            "nameLocation": "1229:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1263:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1256:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$224",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 120,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 119,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 224,
                      "src": "1256:6:1"
                    },
                    "referencedDeclaration": 224,
                    "src": "1256:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$224",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1286:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1278:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1278:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1310:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1302:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1302:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1334:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1329:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1246:100:1"
            },
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1355:0:1"
            },
            "scope": 146,
            "src": "1220:257:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 147,
        "src": "116:1363:1",
        "usedErrors": []
      }
    ],
    "src": "32:1447:1"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516105eb3803806105eb83398101604081905261002f91610097565b600080546001600160a01b03199081166001600160a01b0397881617909155600180548216958716959095179094556002929092556003805490931693169290921790556005556100ee565b80516001600160a01b038116811461009257600080fd5b919050565b600080600080600060a086880312156100af57600080fd5b6100b88661007b565b94506100c66020870161007b565b9350604086015192506100db6060870161007b565b9150608086015190509295509295909350565b6104ee806100fd6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063736889141161005b57806373688914146101195780638119c0651461012c578063d21220a714610134578063f400fde41461014757600080fd5b8063057bfcc71461008d5780632573bad5146100a957806325be124e146100db5780635270972514610106575b600080fd5b61009660055481565b6040519081526020015b60405180910390f35b6100d96100b736600461044d565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b005b6003546100ee906001600160a01b031681565b6040516001600160a01b0390911681526020016100a0565b6004546100ee906001600160a01b031681565b6001546100ee906001600160a01b031681565b6100d9610150565b6000546100ee906001600160a01b031681565b61009660025481565b6004546001600160a01b031633146101a05760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b600254600054600154604051636eb1769f60e11b81526001600160a01b03918216600482015230602482015291169063dd62ed3e90604401602060405180830381865afa1580156101f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610219919061047d565b10156102675760405162461bcd60e51b815260206004820152601960248201527f546f6b656e203120616c6c6f77616e636520746f6f206c6f77000000000000006044820152606401610197565b60055460035460048054604051636eb1769f60e11b81526001600160a01b03918216928101929092523060248301529091169063dd62ed3e90604401602060405180830381865afa1580156102c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e4919061047d565b10156103325760405162461bcd60e51b815260206004820152601960248201527f546f6b656e203220616c6c6f77616e636520746f6f206c6f77000000000000006044820152606401610197565b600054600154600454600254610358936001600160a01b03908116938116921690610380565b60035460045460015460055461037e936001600160a01b03908116938116921690610380565b565b6040516323b872dd60e01b81526001600160a01b038481166004830152838116602483015260448201839052600091908616906323b872dd906064016020604051808303816000875af11580156103db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ff9190610496565b9050806104465760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610197565b5050505050565b60006020828403121561045f57600080fd5b81356001600160a01b038116811461047657600080fd5b9392505050565b60006020828403121561048f57600080fd5b5051919050565b6000602082840312156104a857600080fd5b8151801515811461047657600080fdfea2646970667358221220e34a281a6959c38fc320cec673bd962de59861149b151aa3e0f24a7a2faab1fc64736f6c634300080b0033",
  "bytecodeSha1": "cdcfcdd3d95bb4643afdf0a76c1bbf9fc2074b76",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "TokenSwap",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "TokenSwap._safeTransferFrom": {
          "10": [
            1440,
            1444,
            true
          ]
        },
        "TokenSwap.swap": {
          "7": [
            783,
            803,
            true
          ],
          "8": [
            853,
            903,
            true
          ],
          "9": [
            985,
            1035,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {
        "TokenSwap._safeTransferFrom": {
          "6": [
            1432,
            1470
          ]
        },
        "TokenSwap.getOwner2Address": {
          "0": [
            715,
            729
          ]
        },
        "TokenSwap.swap": {
          "1": [
            775,
            822
          ],
          "2": [
            832,
            954
          ],
          "3": [
            964,
            1086
          ],
          "4": [
            1097,
            1147
          ],
          "5": [
            1157,
            1207
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.0.0/IERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063736889141161005b57806373688914146101195780638119c0651461012c578063d21220a714610134578063f400fde41461014757600080fd5b8063057bfcc71461008d5780632573bad5146100a957806325be124e146100db5780635270972514610106575b600080fd5b61009660055481565b6040519081526020015b60405180910390f35b6100d96100b736600461044d565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b005b6003546100ee906001600160a01b031681565b6040516001600160a01b0390911681526020016100a0565b6004546100ee906001600160a01b031681565b6001546100ee906001600160a01b031681565b6100d9610150565b6000546100ee906001600160a01b031681565b61009660025481565b6004546001600160a01b031633146101a05760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b600254600054600154604051636eb1769f60e11b81526001600160a01b03918216600482015230602482015291169063dd62ed3e90604401602060405180830381865afa1580156101f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610219919061047d565b10156102675760405162461bcd60e51b815260206004820152601960248201527f546f6b656e203120616c6c6f77616e636520746f6f206c6f77000000000000006044820152606401610197565b60055460035460048054604051636eb1769f60e11b81526001600160a01b03918216928101929092523060248301529091169063dd62ed3e90604401602060405180830381865afa1580156102c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e4919061047d565b10156103325760405162461bcd60e51b815260206004820152601960248201527f546f6b656e203220616c6c6f77616e636520746f6f206c6f77000000000000006044820152606401610197565b600054600154600454600254610358936001600160a01b03908116938116921690610380565b60035460045460015460055461037e936001600160a01b03908116938116921690610380565b565b6040516323b872dd60e01b81526001600160a01b038481166004830152838116602483015260448201839052600091908616906323b872dd906064016020604051808303816000875af11580156103db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ff9190610496565b9050806104465760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610197565b5050505050565b60006020828403121561045f57600080fd5b81356001600160a01b038116811461047657600080fd5b9392505050565b60006020828403121561048f57600080fd5b5051919050565b6000602082840312156104a857600080fd5b8151801515811461047657600080fdfea2646970667358221220e34a281a6959c38fc320cec673bd962de59861149b151aa3e0f24a7a2faab1fc64736f6c634300080b0033",
  "deployedSourceMap": "116:1363:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;272:19;;;;;;;;;160:25:2;;;148:2;133:18;272:19:1;;;;;;;;657:79;;;;;;:::i;:::-;715:6;:14;;-1:-1:-1;;;;;;715:14:1;-1:-1:-1;;;;;715:14:1;;;;;;;;;;657:79;;;219:20;;;;;-1:-1:-1;;;;;219:20:1;;;;;;-1:-1:-1;;;;;665:32:2;;;647:51;;635:2;620:18;219:20:1;487:217:2;245:21:1;;;;;-1:-1:-1;;;;;245:21:1;;;167;;;;;-1:-1:-1;;;;;167:21:1;;;742:472;;;:::i;141:20::-;;;;;-1:-1:-1;;;;;141:20:1;;;194:19;;;;;;742:472;797:6;;-1:-1:-1;;;;;797:6:1;783:10;:20;775:47;;;;-1:-1:-1;;;775:47:1;;1119:2:2;775:47:1;;;1101:21:2;1158:2;1138:18;;;1131:30;-1:-1:-1;;;1177:18:2;;;1170:44;1231:18;;775:47:1;;;;;;;;;896:7;;853:6;;;870;853:39;;-1:-1:-1;;;853:39:1;;-1:-1:-1;;;;;870:6:1;;;853:39;;;1472:34:2;886:4:1;1522:18:2;;;1515:43;853:6:1;;;:16;;1407:18:2;;853:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;832:122;;;;-1:-1:-1;;;832:122:1;;1960:2:2;832:122:1;;;1942:21:2;1999:2;1979:18;;;1972:30;2038:27;2018:18;;;2011:55;2083:18;;832:122:1;1758:349:2;832:122:1;1028:7;;985:6;;1002;;;985:39;;-1:-1:-1;;;985:39:1;;-1:-1:-1;;;;;1002:6:1;;;985:39;;;1472:34:2;;;;1018:4:1;1522:18:2;;;1515:43;985:6:1;;;;:16;;1407:18:2;;985:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;964:122;;;;-1:-1:-1;;;964:122:1;;2314:2:2;964:122:1;;;2296:21:2;2353:2;2333:18;;;2326:30;2392:27;2372:18;;;2365:55;2437:18;;964:122:1;2112:349:2;964:122:1;1115:6;;;1123;1131;;1139:7;;1097:50;;-1:-1:-1;;;;;1115:6:1;;;;1123;;;1131;;1097:17;:50::i;:::-;1175:6;;1183;;1175;1191;1199:7;;1157:50;;-1:-1:-1;;;;;1175:6:1;;;;1183;;;1191;;1157:17;:50::i;:::-;742:472::o;1220:257::-;1377:45;;-1:-1:-1;;;1377:45:1;;-1:-1:-1;;;;;2724:15:2;;;1377:45:1;;;2706:34:2;2776:15;;;2756:18;;;2749:43;2808:18;;;2801:34;;;1365:9:1;;1377:18;;;;;;2641::2;;1377:45:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1365:57;;1440:4;1432:38;;;;-1:-1:-1;;;1432:38:1;;3330:2:2;1432:38:1;;;3312:21:2;3369:2;3349:18;;;3342:30;-1:-1:-1;;;3388:18:2;;;3381:51;3449:18;;1432:38:1;3128:345:2;1432:38:1;1355:122;1220:257;;;;:::o;196:286:2:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;350:23;;-1:-1:-1;;;;;402:31:2;;392:42;;382:70;;448:1;445;438:12;382:70;471:5;196:286;-1:-1:-1;;;196:286:2:o;1569:184::-;1639:6;1692:2;1680:9;1671:7;1667:23;1663:32;1660:52;;;1708:1;1705;1698:12;1660:52;-1:-1:-1;1731:16:2;;1569:184;-1:-1:-1;1569:184:2:o;2846:277::-;2913:6;2966:2;2954:9;2945:7;2941:23;2937:32;2934:52;;;2982:1;2979;2972:12;2934:52;3014:9;3008:16;3067:5;3060:13;3053:21;3046:5;3043:32;3033:60;;3089:1;3086;3079:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    116,
    1479
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73688914 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x73688914 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x8119C065 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xF400FDE4 EQ PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x57BFCC7 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x2573BAD5 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x25BE124E EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x52709725 EQ PUSH2 0x106 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH2 0xB7 CALLDATASIZE PUSH1 0x4 PUSH2 0x44D JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xEE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xEE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xEE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x150 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xEE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x96 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x47D JUMP JUMPDEST LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E203120616C6C6F77616E636520746F6F206C6F7700000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x197 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x47D JUMP JUMPDEST LT ISZERO PUSH2 0x332 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E203220616C6C6F77616E636520746F6F206C6F7700000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x197 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x4 SLOAD PUSH1 0x2 SLOAD PUSH2 0x358 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 DUP2 AND SWAP3 AND SWAP1 PUSH2 0x380 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x1 SLOAD PUSH1 0x5 SLOAD PUSH2 0x37E SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 DUP2 AND SWAP3 AND SWAP1 PUSH2 0x380 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x496 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x446 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x197 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0x4A 0x28 BYTE PUSH10 0x59C38FC320CEC673BD96 0x2D 0xE5 SWAP9 PUSH2 0x149B ISZERO BYTE LOG3 0xE0 CALLCODE 0x4A PUSH27 0x2FAAB1FC64736F6C634300080B0033000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        116,
        1479
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x88"
    },
    "25": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x73688914"
    },
    "38": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x73688914"
    },
    "49": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x119"
    },
    "53": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8119C065"
    },
    "60": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12C"
    },
    "64": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD21220A7"
    },
    "71": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x134"
    },
    "75": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF400FDE4"
    },
    "82": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x147"
    },
    "86": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "DUP1",
      "path": "1"
    },
    "90": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "REVERT",
      "path": "1"
    },
    "91": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "92": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "DUP1",
      "path": "1"
    },
    "93": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x57BFCC7"
    },
    "98": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "EQ",
      "path": "1"
    },
    "99": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8D"
    },
    "102": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "DUP1",
      "path": "1"
    },
    "104": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2573BAD5"
    },
    "109": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "EQ",
      "path": "1"
    },
    "110": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA9"
    },
    "113": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x25BE124E"
    },
    "120": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDB"
    },
    "124": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x52709725"
    },
    "131": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x106"
    },
    "135": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "137": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "139": {
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "DUP1",
      "path": "1"
    },
    "140": {
      "first_revert": true,
      "fn": null,
      "offset": [
        116,
        1479
      ],
      "op": "REVERT",
      "path": "1"
    },
    "141": {
      "offset": [
        272,
        291
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "142": {
      "fn": null,
      "offset": [
        272,
        291
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x96"
    },
    "145": {
      "fn": null,
      "offset": [
        272,
        291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "147": {
      "fn": null,
      "offset": [
        272,
        291
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "148": {
      "fn": null,
      "offset": [
        272,
        291
      ],
      "op": "DUP2",
      "path": "1"
    },
    "149": {
      "fn": null,
      "offset": [
        272,
        291
      ],
      "op": "JUMP",
      "path": "1"
    },
    "150": {
      "fn": null,
      "offset": [
        272,
        291
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "151": {
      "fn": null,
      "offset": [
        272,
        291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "153": {
      "fn": null,
      "offset": [
        272,
        291
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "154": {
      "op": "SWAP1"
    },
    "155": {
      "op": "DUP2"
    },
    "156": {
      "op": "MSTORE"
    },
    "157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "159": {
      "op": "ADD"
    },
    "160": {
      "offset": [
        272,
        291
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "161": {
      "fn": null,
      "offset": [
        272,
        291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "163": {
      "fn": null,
      "offset": [
        272,
        291
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "164": {
      "fn": null,
      "offset": [
        272,
        291
      ],
      "op": "DUP1",
      "path": "1"
    },
    "165": {
      "fn": null,
      "offset": [
        272,
        291
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "166": {
      "fn": null,
      "offset": [
        272,
        291
      ],
      "op": "SUB",
      "path": "1"
    },
    "167": {
      "fn": null,
      "offset": [
        272,
        291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "168": {
      "fn": null,
      "offset": [
        272,
        291
      ],
      "op": "RETURN",
      "path": "1"
    },
    "169": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        657,
        736
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "170": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        657,
        736
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD9"
    },
    "173": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        657,
        736
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7"
    },
    "176": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        657,
        736
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "177": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        657,
        736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "179": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        657,
        736
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x44D"
    },
    "182": {
      "fn": "TokenSwap.getOwner2Address",
      "jump": "i",
      "offset": [
        657,
        736
      ],
      "op": "JUMP",
      "path": "1"
    },
    "183": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        657,
        736
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "184": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        715,
        721
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x4"
    },
    "186": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        715,
        729
      ],
      "op": "DUP1",
      "path": "1"
    },
    "187": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        715,
        729
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "194": {
      "op": "SHL"
    },
    "195": {
      "op": "SUB"
    },
    "196": {
      "op": "NOT"
    },
    "197": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        715,
        729
      ],
      "op": "AND",
      "path": "1"
    },
    "198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "204": {
      "op": "SHL"
    },
    "205": {
      "op": "SUB"
    },
    "206": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        715,
        729
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "207": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        715,
        729
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "208": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        715,
        729
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "209": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        715,
        729
      ],
      "op": "AND",
      "path": "1"
    },
    "210": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        715,
        729
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "211": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        715,
        729
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "212": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        715,
        729
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "213": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        715,
        729
      ],
      "op": "OR",
      "path": "1"
    },
    "214": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        715,
        729
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "215": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        715,
        729
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "216": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        657,
        736
      ],
      "op": "JUMP",
      "path": "1"
    },
    "217": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        657,
        736
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "218": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        657,
        736
      ],
      "op": "STOP",
      "path": "1"
    },
    "219": {
      "offset": [
        219,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "220": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        219,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "222": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        219,
        239
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "223": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        219,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEE"
    },
    "226": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        219,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "233": {
      "op": "SHL"
    },
    "234": {
      "op": "SUB"
    },
    "235": {
      "offset": [
        219,
        239
      ],
      "op": "AND",
      "path": "1"
    },
    "236": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        219,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "237": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        219,
        239
      ],
      "op": "JUMP",
      "path": "1"
    },
    "238": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        219,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "239": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        219,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "241": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        219,
        239
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "248": {
      "op": "SHL"
    },
    "249": {
      "op": "SUB"
    },
    "250": {
      "op": "SWAP1"
    },
    "251": {
      "op": "SWAP2"
    },
    "252": {
      "op": "AND"
    },
    "253": {
      "op": "DUP2"
    },
    "254": {
      "op": "MSTORE"
    },
    "255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "257": {
      "op": "ADD"
    },
    "258": {
      "offset": [
        219,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0"
    },
    "261": {
      "op": "JUMP"
    },
    "262": {
      "offset": [
        245,
        266
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "263": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        245,
        266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "265": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        245,
        266
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "266": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        245,
        266
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEE"
    },
    "269": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        245,
        266
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "276": {
      "op": "SHL"
    },
    "277": {
      "op": "SUB"
    },
    "278": {
      "offset": [
        245,
        266
      ],
      "op": "AND",
      "path": "1"
    },
    "279": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        245,
        266
      ],
      "op": "DUP2",
      "path": "1"
    },
    "280": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        245,
        266
      ],
      "op": "JUMP",
      "path": "1"
    },
    "281": {
      "offset": [
        167,
        188
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "282": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        167,
        188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "284": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        167,
        188
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "285": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        167,
        188
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEE"
    },
    "288": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        167,
        188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "295": {
      "op": "SHL"
    },
    "296": {
      "op": "SUB"
    },
    "297": {
      "offset": [
        167,
        188
      ],
      "op": "AND",
      "path": "1"
    },
    "298": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        167,
        188
      ],
      "op": "DUP2",
      "path": "1"
    },
    "299": {
      "fn": "TokenSwap.getOwner2Address",
      "offset": [
        167,
        188
      ],
      "op": "JUMP",
      "path": "1"
    },
    "300": {
      "fn": "TokenSwap.swap",
      "offset": [
        742,
        1214
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "301": {
      "fn": "TokenSwap.swap",
      "offset": [
        742,
        1214
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD9"
    },
    "304": {
      "fn": "TokenSwap.swap",
      "offset": [
        742,
        1214
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x150"
    },
    "307": {
      "fn": "TokenSwap.swap",
      "jump": "i",
      "offset": [
        742,
        1214
      ],
      "op": "JUMP",
      "path": "1"
    },
    "308": {
      "offset": [
        141,
        161
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "309": {
      "fn": "TokenSwap.swap",
      "offset": [
        141,
        161
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "311": {
      "fn": "TokenSwap.swap",
      "offset": [
        141,
        161
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "312": {
      "fn": "TokenSwap.swap",
      "offset": [
        141,
        161
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEE"
    },
    "315": {
      "fn": "TokenSwap.swap",
      "offset": [
        141,
        161
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "322": {
      "op": "SHL"
    },
    "323": {
      "op": "SUB"
    },
    "324": {
      "offset": [
        141,
        161
      ],
      "op": "AND",
      "path": "1"
    },
    "325": {
      "fn": "TokenSwap.swap",
      "offset": [
        141,
        161
      ],
      "op": "DUP2",
      "path": "1"
    },
    "326": {
      "fn": "TokenSwap.swap",
      "offset": [
        141,
        161
      ],
      "op": "JUMP",
      "path": "1"
    },
    "327": {
      "offset": [
        194,
        213
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "328": {
      "fn": "TokenSwap.swap",
      "offset": [
        194,
        213
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x96"
    },
    "331": {
      "fn": "TokenSwap.swap",
      "offset": [
        194,
        213
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "333": {
      "fn": "TokenSwap.swap",
      "offset": [
        194,
        213
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "334": {
      "fn": "TokenSwap.swap",
      "offset": [
        194,
        213
      ],
      "op": "DUP2",
      "path": "1"
    },
    "335": {
      "fn": "TokenSwap.swap",
      "offset": [
        194,
        213
      ],
      "op": "JUMP",
      "path": "1"
    },
    "336": {
      "fn": "TokenSwap.swap",
      "offset": [
        742,
        1214
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "337": {
      "fn": "TokenSwap.swap",
      "offset": [
        797,
        803
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x4"
    },
    "339": {
      "fn": "TokenSwap.swap",
      "offset": [
        797,
        803
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "346": {
      "op": "SHL"
    },
    "347": {
      "op": "SUB"
    },
    "348": {
      "fn": "TokenSwap.swap",
      "offset": [
        797,
        803
      ],
      "op": "AND",
      "path": "1"
    },
    "349": {
      "fn": "TokenSwap.swap",
      "offset": [
        783,
        793
      ],
      "op": "CALLER",
      "path": "1"
    },
    "350": {
      "branch": 7,
      "fn": "TokenSwap.swap",
      "offset": [
        783,
        803
      ],
      "op": "EQ",
      "path": "1"
    },
    "351": {
      "fn": "TokenSwap.swap",
      "offset": [
        775,
        822
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A0"
    },
    "354": {
      "branch": 7,
      "fn": "TokenSwap.swap",
      "offset": [
        775,
        822
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "355": {
      "fn": "TokenSwap.swap",
      "offset": [
        775,
        822
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "357": {
      "fn": "TokenSwap.swap",
      "offset": [
        775,
        822
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "358": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "362": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "364": {
      "op": "SHL"
    },
    "365": {
      "fn": "TokenSwap.swap",
      "offset": [
        775,
        822
      ],
      "op": "DUP2",
      "path": "1"
    },
    "366": {
      "fn": "TokenSwap.swap",
      "offset": [
        775,
        822
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "367": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "369": {
      "fn": "TokenSwap.swap",
      "offset": [
        775,
        822
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "371": {
      "fn": "TokenSwap.swap",
      "offset": [
        775,
        822
      ],
      "op": "DUP3",
      "path": "1"
    },
    "372": {
      "fn": "TokenSwap.swap",
      "offset": [
        775,
        822
      ],
      "op": "ADD",
      "path": "1"
    },
    "373": {
      "op": "MSTORE"
    },
    "374": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "376": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "378": {
      "op": "DUP3"
    },
    "379": {
      "op": "ADD"
    },
    "380": {
      "op": "MSTORE"
    },
    "381": {
      "op": "PUSH14",
      "value": "0x139BDD08185D5D1A1BDC9A5E9959"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "398": {
      "op": "SHL"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "401": {
      "op": "DUP3"
    },
    "402": {
      "op": "ADD"
    },
    "403": {
      "op": "MSTORE"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "406": {
      "op": "ADD"
    },
    "407": {
      "fn": "TokenSwap.swap",
      "offset": [
        775,
        822
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "408": {
      "fn": "TokenSwap.swap",
      "offset": [
        775,
        822
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "410": {
      "fn": "TokenSwap.swap",
      "offset": [
        775,
        822
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "411": {
      "fn": "TokenSwap.swap",
      "offset": [
        775,
        822
      ],
      "op": "DUP1",
      "path": "1"
    },
    "412": {
      "fn": "TokenSwap.swap",
      "offset": [
        775,
        822
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "413": {
      "fn": "TokenSwap.swap",
      "offset": [
        775,
        822
      ],
      "op": "SUB",
      "path": "1"
    },
    "414": {
      "fn": "TokenSwap.swap",
      "offset": [
        775,
        822
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "415": {
      "fn": "TokenSwap.swap",
      "offset": [
        775,
        822
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "416": {
      "fn": "TokenSwap.swap",
      "offset": [
        775,
        822
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "417": {
      "fn": "TokenSwap.swap",
      "offset": [
        896,
        903
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 2,
      "value": "0x2"
    },
    "419": {
      "fn": "TokenSwap.swap",
      "offset": [
        896,
        903
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "420": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "422": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        859
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "423": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "425": {
      "fn": "TokenSwap.swap",
      "offset": [
        870,
        876
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "426": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "428": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "429": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "434": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "436": {
      "op": "SHL"
    },
    "437": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "DUP2",
      "path": "1"
    },
    "438": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "445": {
      "op": "SHL"
    },
    "446": {
      "op": "SUB"
    },
    "447": {
      "fn": "TokenSwap.swap",
      "offset": [
        870,
        876
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "448": {
      "fn": "TokenSwap.swap",
      "offset": [
        870,
        876
      ],
      "op": "DUP3",
      "path": "1"
    },
    "449": {
      "fn": "TokenSwap.swap",
      "offset": [
        870,
        876
      ],
      "op": "AND",
      "path": "1"
    },
    "450": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "452": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "DUP3",
      "path": "1"
    },
    "453": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "ADD",
      "path": "1"
    },
    "454": {
      "op": "MSTORE"
    },
    "455": {
      "fn": "TokenSwap.swap",
      "offset": [
        886,
        890
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "458": {
      "op": "DUP3"
    },
    "459": {
      "op": "ADD"
    },
    "460": {
      "op": "MSTORE"
    },
    "461": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        859
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "462": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        859
      ],
      "op": "AND",
      "path": "1"
    },
    "463": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        859
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "464": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        869
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "469": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        869
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "472": {
      "op": "ADD"
    },
    "473": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "475": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "477": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "478": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "DUP1",
      "path": "1"
    },
    "479": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "DUP4",
      "path": "1"
    },
    "480": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "SUB",
      "path": "1"
    },
    "481": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "DUP2",
      "path": "1"
    },
    "482": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "DUP7",
      "path": "1"
    },
    "483": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "GAS",
      "path": "1"
    },
    "484": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "485": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "486": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "DUP1",
      "path": "1"
    },
    "487": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "488": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F5"
    },
    "491": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "492": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "493": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "495": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "DUP1",
      "path": "1"
    },
    "496": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "497": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "498": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "500": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "REVERT",
      "path": "1"
    },
    "501": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "502": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "POP",
      "path": "1"
    },
    "503": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "POP",
      "path": "1"
    },
    "504": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "POP",
      "path": "1"
    },
    "505": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "POP",
      "path": "1"
    },
    "506": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "508": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "509": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "510": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "512": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "NOT",
      "path": "1"
    },
    "513": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "515": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "DUP3",
      "path": "1"
    },
    "516": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "ADD",
      "path": "1"
    },
    "517": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "AND",
      "path": "1"
    },
    "518": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "DUP3",
      "path": "1"
    },
    "519": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "ADD",
      "path": "1"
    },
    "520": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "DUP1",
      "path": "1"
    },
    "521": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "523": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "524": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "POP",
      "path": "1"
    },
    "525": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "DUP2",
      "path": "1"
    },
    "526": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "ADD",
      "path": "1"
    },
    "527": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "528": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x219"
    },
    "531": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "532": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "533": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x47D"
    },
    "536": {
      "fn": "TokenSwap.swap",
      "jump": "i",
      "offset": [
        853,
        892
      ],
      "op": "JUMP",
      "path": "1"
    },
    "537": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        892
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "538": {
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        903
      ],
      "op": "LT",
      "path": "1"
    },
    "539": {
      "branch": 8,
      "fn": "TokenSwap.swap",
      "offset": [
        853,
        903
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "540": {
      "fn": "TokenSwap.swap",
      "offset": [
        832,
        954
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x267"
    },
    "543": {
      "branch": 8,
      "fn": "TokenSwap.swap",
      "offset": [
        832,
        954
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "544": {
      "fn": "TokenSwap.swap",
      "offset": [
        832,
        954
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "546": {
      "fn": "TokenSwap.swap",
      "offset": [
        832,
        954
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "547": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "551": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "553": {
      "op": "SHL"
    },
    "554": {
      "fn": "TokenSwap.swap",
      "offset": [
        832,
        954
      ],
      "op": "DUP2",
      "path": "1"
    },
    "555": {
      "fn": "TokenSwap.swap",
      "offset": [
        832,
        954
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "558": {
      "fn": "TokenSwap.swap",
      "offset": [
        832,
        954
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "560": {
      "fn": "TokenSwap.swap",
      "offset": [
        832,
        954
      ],
      "op": "DUP3",
      "path": "1"
    },
    "561": {
      "fn": "TokenSwap.swap",
      "offset": [
        832,
        954
      ],
      "op": "ADD",
      "path": "1"
    },
    "562": {
      "op": "MSTORE"
    },
    "563": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "567": {
      "op": "DUP3"
    },
    "568": {
      "op": "ADD"
    },
    "569": {
      "op": "MSTORE"
    },
    "570": {
      "op": "PUSH32",
      "value": "0x546F6B656E203120616C6C6F77616E636520746F6F206C6F7700000000000000"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "605": {
      "op": "DUP3"
    },
    "606": {
      "op": "ADD"
    },
    "607": {
      "op": "MSTORE"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "610": {
      "op": "ADD"
    },
    "611": {
      "fn": "TokenSwap.swap",
      "offset": [
        832,
        954
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x197"
    },
    "614": {
      "op": "JUMP"
    },
    "615": {
      "fn": "TokenSwap.swap",
      "offset": [
        832,
        954
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "616": {
      "fn": "TokenSwap.swap",
      "offset": [
        1028,
        1035
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x5"
    },
    "618": {
      "fn": "TokenSwap.swap",
      "offset": [
        1028,
        1035
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "619": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "621": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        991
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "622": {
      "fn": "TokenSwap.swap",
      "offset": [
        1002,
        1008
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "624": {
      "fn": "TokenSwap.swap",
      "offset": [
        1002,
        1008
      ],
      "op": "DUP1",
      "path": "1"
    },
    "625": {
      "fn": "TokenSwap.swap",
      "offset": [
        1002,
        1008
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "626": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "628": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "629": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "634": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "636": {
      "op": "SHL"
    },
    "637": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "DUP2",
      "path": "1"
    },
    "638": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "645": {
      "op": "SHL"
    },
    "646": {
      "op": "SUB"
    },
    "647": {
      "fn": "TokenSwap.swap",
      "offset": [
        1002,
        1008
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "648": {
      "fn": "TokenSwap.swap",
      "offset": [
        1002,
        1008
      ],
      "op": "DUP3",
      "path": "1"
    },
    "649": {
      "fn": "TokenSwap.swap",
      "offset": [
        1002,
        1008
      ],
      "op": "AND",
      "path": "1"
    },
    "650": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "651": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "DUP2",
      "path": "1"
    },
    "652": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "ADD",
      "path": "1"
    },
    "653": {
      "op": "SWAP3"
    },
    "654": {
      "op": "SWAP1"
    },
    "655": {
      "op": "SWAP3"
    },
    "656": {
      "op": "MSTORE"
    },
    "657": {
      "fn": "TokenSwap.swap",
      "offset": [
        1018,
        1022
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "658": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "660": {
      "op": "DUP4"
    },
    "661": {
      "op": "ADD"
    },
    "662": {
      "op": "MSTORE"
    },
    "663": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        991
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "664": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        991
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "665": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        991
      ],
      "op": "AND",
      "path": "1"
    },
    "666": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        991
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "667": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1001
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "672": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1001
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "675": {
      "op": "ADD"
    },
    "676": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "678": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "680": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "681": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "DUP1",
      "path": "1"
    },
    "682": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "DUP4",
      "path": "1"
    },
    "683": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "SUB",
      "path": "1"
    },
    "684": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "DUP2",
      "path": "1"
    },
    "685": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "DUP7",
      "path": "1"
    },
    "686": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "GAS",
      "path": "1"
    },
    "687": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "688": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "689": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "DUP1",
      "path": "1"
    },
    "690": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "691": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C0"
    },
    "694": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "695": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "696": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "698": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "DUP1",
      "path": "1"
    },
    "699": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "700": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "701": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "703": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "REVERT",
      "path": "1"
    },
    "704": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "705": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "POP",
      "path": "1"
    },
    "706": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "POP",
      "path": "1"
    },
    "707": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "POP",
      "path": "1"
    },
    "708": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "POP",
      "path": "1"
    },
    "709": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "711": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "712": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "713": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "715": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "NOT",
      "path": "1"
    },
    "716": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "718": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "DUP3",
      "path": "1"
    },
    "719": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "ADD",
      "path": "1"
    },
    "720": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "AND",
      "path": "1"
    },
    "721": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "DUP3",
      "path": "1"
    },
    "722": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "ADD",
      "path": "1"
    },
    "723": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "DUP1",
      "path": "1"
    },
    "724": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "726": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "727": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "POP",
      "path": "1"
    },
    "728": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "DUP2",
      "path": "1"
    },
    "729": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "ADD",
      "path": "1"
    },
    "730": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "731": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E4"
    },
    "734": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "735": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "736": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x47D"
    },
    "739": {
      "fn": "TokenSwap.swap",
      "jump": "i",
      "offset": [
        985,
        1024
      ],
      "op": "JUMP",
      "path": "1"
    },
    "740": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1024
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "741": {
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1035
      ],
      "op": "LT",
      "path": "1"
    },
    "742": {
      "branch": 9,
      "fn": "TokenSwap.swap",
      "offset": [
        985,
        1035
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "743": {
      "fn": "TokenSwap.swap",
      "offset": [
        964,
        1086
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x332"
    },
    "746": {
      "branch": 9,
      "fn": "TokenSwap.swap",
      "offset": [
        964,
        1086
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "747": {
      "fn": "TokenSwap.swap",
      "offset": [
        964,
        1086
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "749": {
      "fn": "TokenSwap.swap",
      "offset": [
        964,
        1086
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "750": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "754": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "756": {
      "op": "SHL"
    },
    "757": {
      "fn": "TokenSwap.swap",
      "offset": [
        964,
        1086
      ],
      "op": "DUP2",
      "path": "1"
    },
    "758": {
      "fn": "TokenSwap.swap",
      "offset": [
        964,
        1086
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "761": {
      "fn": "TokenSwap.swap",
      "offset": [
        964,
        1086
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "763": {
      "fn": "TokenSwap.swap",
      "offset": [
        964,
        1086
      ],
      "op": "DUP3",
      "path": "1"
    },
    "764": {
      "fn": "TokenSwap.swap",
      "offset": [
        964,
        1086
      ],
      "op": "ADD",
      "path": "1"
    },
    "765": {
      "op": "MSTORE"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "770": {
      "op": "DUP3"
    },
    "771": {
      "op": "ADD"
    },
    "772": {
      "op": "MSTORE"
    },
    "773": {
      "op": "PUSH32",
      "value": "0x546F6B656E203220616C6C6F77616E636520746F6F206C6F7700000000000000"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "808": {
      "op": "DUP3"
    },
    "809": {
      "op": "ADD"
    },
    "810": {
      "op": "MSTORE"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "813": {
      "op": "ADD"
    },
    "814": {
      "fn": "TokenSwap.swap",
      "offset": [
        964,
        1086
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x197"
    },
    "817": {
      "op": "JUMP"
    },
    "818": {
      "fn": "TokenSwap.swap",
      "offset": [
        964,
        1086
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "819": {
      "fn": "TokenSwap.swap",
      "offset": [
        1115,
        1121
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x0"
    },
    "821": {
      "fn": "TokenSwap.swap",
      "offset": [
        1115,
        1121
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "822": {
      "fn": "TokenSwap.swap",
      "offset": [
        1115,
        1121
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "824": {
      "fn": "TokenSwap.swap",
      "offset": [
        1123,
        1129
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "825": {
      "fn": "TokenSwap.swap",
      "offset": [
        1131,
        1137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "827": {
      "fn": "TokenSwap.swap",
      "offset": [
        1131,
        1137
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "828": {
      "fn": "TokenSwap.swap",
      "offset": [
        1139,
        1146
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "830": {
      "fn": "TokenSwap.swap",
      "offset": [
        1139,
        1146
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "831": {
      "fn": "TokenSwap.swap",
      "offset": [
        1097,
        1147
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x358"
    },
    "834": {
      "fn": "TokenSwap.swap",
      "offset": [
        1097,
        1147
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "841": {
      "op": "SHL"
    },
    "842": {
      "op": "SUB"
    },
    "843": {
      "fn": "TokenSwap.swap",
      "offset": [
        1115,
        1121
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "844": {
      "fn": "TokenSwap.swap",
      "offset": [
        1115,
        1121
      ],
      "op": "DUP2",
      "path": "1"
    },
    "845": {
      "fn": "TokenSwap.swap",
      "offset": [
        1115,
        1121
      ],
      "op": "AND",
      "path": "1"
    },
    "846": {
      "fn": "TokenSwap.swap",
      "offset": [
        1115,
        1121
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "847": {
      "fn": "TokenSwap.swap",
      "offset": [
        1123,
        1129
      ],
      "op": "DUP2",
      "path": "1"
    },
    "848": {
      "fn": "TokenSwap.swap",
      "offset": [
        1123,
        1129
      ],
      "op": "AND",
      "path": "1"
    },
    "849": {
      "fn": "TokenSwap.swap",
      "offset": [
        1123,
        1129
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "850": {
      "fn": "TokenSwap.swap",
      "offset": [
        1131,
        1137
      ],
      "op": "AND",
      "path": "1"
    },
    "851": {
      "fn": "TokenSwap.swap",
      "offset": [
        1131,
        1137
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "852": {
      "fn": "TokenSwap.swap",
      "offset": [
        1097,
        1114
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x380"
    },
    "855": {
      "fn": "TokenSwap.swap",
      "jump": "i",
      "offset": [
        1097,
        1147
      ],
      "op": "JUMP",
      "path": "1"
    },
    "856": {
      "fn": "TokenSwap.swap",
      "offset": [
        1097,
        1147
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "857": {
      "fn": "TokenSwap.swap",
      "offset": [
        1175,
        1181
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x3"
    },
    "859": {
      "fn": "TokenSwap.swap",
      "offset": [
        1175,
        1181
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "860": {
      "fn": "TokenSwap.swap",
      "offset": [
        1183,
        1189
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "862": {
      "fn": "TokenSwap.swap",
      "offset": [
        1183,
        1189
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "863": {
      "fn": "TokenSwap.swap",
      "offset": [
        1175,
        1181
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "865": {
      "fn": "TokenSwap.swap",
      "offset": [
        1191,
        1197
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "866": {
      "fn": "TokenSwap.swap",
      "offset": [
        1199,
        1206
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "868": {
      "fn": "TokenSwap.swap",
      "offset": [
        1199,
        1206
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "869": {
      "fn": "TokenSwap.swap",
      "offset": [
        1157,
        1207
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37E"
    },
    "872": {
      "fn": "TokenSwap.swap",
      "offset": [
        1157,
        1207
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "879": {
      "op": "SHL"
    },
    "880": {
      "op": "SUB"
    },
    "881": {
      "fn": "TokenSwap.swap",
      "offset": [
        1175,
        1181
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "882": {
      "fn": "TokenSwap.swap",
      "offset": [
        1175,
        1181
      ],
      "op": "DUP2",
      "path": "1"
    },
    "883": {
      "fn": "TokenSwap.swap",
      "offset": [
        1175,
        1181
      ],
      "op": "AND",
      "path": "1"
    },
    "884": {
      "fn": "TokenSwap.swap",
      "offset": [
        1175,
        1181
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "885": {
      "fn": "TokenSwap.swap",
      "offset": [
        1183,
        1189
      ],
      "op": "DUP2",
      "path": "1"
    },
    "886": {
      "fn": "TokenSwap.swap",
      "offset": [
        1183,
        1189
      ],
      "op": "AND",
      "path": "1"
    },
    "887": {
      "fn": "TokenSwap.swap",
      "offset": [
        1183,
        1189
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "888": {
      "fn": "TokenSwap.swap",
      "offset": [
        1191,
        1197
      ],
      "op": "AND",
      "path": "1"
    },
    "889": {
      "fn": "TokenSwap.swap",
      "offset": [
        1191,
        1197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "890": {
      "fn": "TokenSwap.swap",
      "offset": [
        1157,
        1174
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x380"
    },
    "893": {
      "fn": "TokenSwap.swap",
      "jump": "i",
      "offset": [
        1157,
        1207
      ],
      "op": "JUMP",
      "path": "1"
    },
    "894": {
      "fn": "TokenSwap.swap",
      "offset": [
        1157,
        1207
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "895": {
      "fn": "TokenSwap.swap",
      "jump": "o",
      "offset": [
        742,
        1214
      ],
      "op": "JUMP",
      "path": "1"
    },
    "896": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1220,
        1477
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "897": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "899": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "900": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "905": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "907": {
      "op": "SHL"
    },
    "908": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "DUP2",
      "path": "1"
    },
    "909": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "914": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "916": {
      "op": "SHL"
    },
    "917": {
      "op": "SUB"
    },
    "918": {
      "op": "DUP5"
    },
    "919": {
      "op": "DUP2"
    },
    "920": {
      "op": "AND"
    },
    "921": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "923": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "DUP4",
      "path": "1"
    },
    "924": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "ADD",
      "path": "1"
    },
    "925": {
      "op": "MSTORE"
    },
    "926": {
      "op": "DUP4"
    },
    "927": {
      "op": "DUP2"
    },
    "928": {
      "op": "AND"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "931": {
      "op": "DUP4"
    },
    "932": {
      "op": "ADD"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "936": {
      "op": "DUP3"
    },
    "937": {
      "op": "ADD"
    },
    "938": {
      "op": "DUP4"
    },
    "939": {
      "op": "SWAP1"
    },
    "940": {
      "op": "MSTORE"
    },
    "941": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1365,
        1374
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "943": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1365,
        1374
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "944": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1395
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "945": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1395
      ],
      "op": "DUP7",
      "path": "1"
    },
    "946": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1395
      ],
      "op": "AND",
      "path": "1"
    },
    "947": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1395
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "948": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1395
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "953": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1395
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "956": {
      "op": "ADD"
    },
    "957": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "959": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "961": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "962": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "DUP1",
      "path": "1"
    },
    "963": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "DUP4",
      "path": "1"
    },
    "964": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "SUB",
      "path": "1"
    },
    "965": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "DUP2",
      "path": "1"
    },
    "966": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "968": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "DUP8",
      "path": "1"
    },
    "969": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "GAS",
      "path": "1"
    },
    "970": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "CALL",
      "path": "1"
    },
    "971": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "972": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "DUP1",
      "path": "1"
    },
    "973": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "974": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DB"
    },
    "977": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "978": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "979": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "981": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "DUP1",
      "path": "1"
    },
    "982": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "983": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "984": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "986": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "REVERT",
      "path": "1"
    },
    "987": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "988": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "POP",
      "path": "1"
    },
    "989": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "POP",
      "path": "1"
    },
    "990": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "POP",
      "path": "1"
    },
    "991": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "POP",
      "path": "1"
    },
    "992": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "994": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "995": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "996": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "998": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "NOT",
      "path": "1"
    },
    "999": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1001": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1002": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "ADD",
      "path": "1"
    },
    "1003": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "AND",
      "path": "1"
    },
    "1004": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1005": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "ADD",
      "path": "1"
    },
    "1006": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1007": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1009": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1010": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "POP",
      "path": "1"
    },
    "1011": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1012": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "ADD",
      "path": "1"
    },
    "1013": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1014": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FF"
    },
    "1017": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1018": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1019": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x496"
    },
    "1022": {
      "fn": "TokenSwap._safeTransferFrom",
      "jump": "i",
      "offset": [
        1377,
        1422
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1023": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1377,
        1422
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1024": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1365,
        1422
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1025": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1365,
        1422
      ],
      "op": "POP",
      "path": "1"
    },
    "1026": {
      "branch": 10,
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1440,
        1444
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 6
    },
    "1027": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1432,
        1470
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x446"
    },
    "1030": {
      "branch": 10,
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1432,
        1470
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1031": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1432,
        1470
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1033": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1432,
        1470
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1034": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1040": {
      "op": "SHL"
    },
    "1041": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1432,
        1470
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1042": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1432,
        1470
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1045": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1432,
        1470
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1047": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1432,
        1470
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1048": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1432,
        1470
      ],
      "op": "ADD",
      "path": "1"
    },
    "1049": {
      "op": "MSTORE"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1054": {
      "op": "DUP3"
    },
    "1055": {
      "op": "ADD"
    },
    "1056": {
      "op": "MSTORE"
    },
    "1057": {
      "op": "PUSH21",
      "value": "0x151BDAD95B881D1C985B9CD9995C8819985A5B1959"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "1081": {
      "op": "SHL"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1084": {
      "op": "DUP3"
    },
    "1085": {
      "op": "ADD"
    },
    "1086": {
      "op": "MSTORE"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1089": {
      "op": "ADD"
    },
    "1090": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1432,
        1470
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x197"
    },
    "1093": {
      "op": "JUMP"
    },
    "1094": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1432,
        1470
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1095": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1355,
        1477
      ],
      "op": "POP",
      "path": "1"
    },
    "1096": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1220,
        1477
      ],
      "op": "POP",
      "path": "1"
    },
    "1097": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1220,
        1477
      ],
      "op": "POP",
      "path": "1"
    },
    "1098": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1220,
        1477
      ],
      "op": "POP",
      "path": "1"
    },
    "1099": {
      "fn": "TokenSwap._safeTransferFrom",
      "offset": [
        1220,
        1477
      ],
      "op": "POP",
      "path": "1"
    },
    "1100": {
      "fn": "TokenSwap._safeTransferFrom",
      "jump": "o",
      "offset": [
        1220,
        1477
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1101": {
      "op": "JUMPDEST"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1106": {
      "op": "DUP3"
    },
    "1107": {
      "op": "DUP5"
    },
    "1108": {
      "op": "SUB"
    },
    "1109": {
      "op": "SLT"
    },
    "1110": {
      "op": "ISZERO"
    },
    "1111": {
      "op": "PUSH2",
      "value": "0x45F"
    },
    "1114": {
      "op": "JUMPI"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1117": {
      "op": "DUP1"
    },
    "1118": {
      "op": "REVERT"
    },
    "1119": {
      "op": "JUMPDEST"
    },
    "1120": {
      "op": "DUP2"
    },
    "1121": {
      "op": "CALLDATALOAD"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1128": {
      "op": "SHL"
    },
    "1129": {
      "op": "SUB"
    },
    "1130": {
      "op": "DUP2"
    },
    "1131": {
      "op": "AND"
    },
    "1132": {
      "op": "DUP2"
    },
    "1133": {
      "op": "EQ"
    },
    "1134": {
      "op": "PUSH2",
      "value": "0x476"
    },
    "1137": {
      "op": "JUMPI"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1140": {
      "op": "DUP1"
    },
    "1141": {
      "op": "REVERT"
    },
    "1142": {
      "op": "JUMPDEST"
    },
    "1143": {
      "op": "SWAP4"
    },
    "1144": {
      "op": "SWAP3"
    },
    "1145": {
      "op": "POP"
    },
    "1146": {
      "op": "POP"
    },
    "1147": {
      "op": "POP"
    },
    "1148": {
      "jump": "o",
      "op": "JUMP"
    },
    "1149": {
      "op": "JUMPDEST"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1154": {
      "op": "DUP3"
    },
    "1155": {
      "op": "DUP5"
    },
    "1156": {
      "op": "SUB"
    },
    "1157": {
      "op": "SLT"
    },
    "1158": {
      "op": "ISZERO"
    },
    "1159": {
      "op": "PUSH2",
      "value": "0x48F"
    },
    "1162": {
      "op": "JUMPI"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1165": {
      "op": "DUP1"
    },
    "1166": {
      "op": "REVERT"
    },
    "1167": {
      "op": "JUMPDEST"
    },
    "1168": {
      "op": "POP"
    },
    "1169": {
      "op": "MLOAD"
    },
    "1170": {
      "op": "SWAP2"
    },
    "1171": {
      "op": "SWAP1"
    },
    "1172": {
      "op": "POP"
    },
    "1173": {
      "jump": "o",
      "op": "JUMP"
    },
    "1174": {
      "op": "JUMPDEST"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1179": {
      "op": "DUP3"
    },
    "1180": {
      "op": "DUP5"
    },
    "1181": {
      "op": "SUB"
    },
    "1182": {
      "op": "SLT"
    },
    "1183": {
      "op": "ISZERO"
    },
    "1184": {
      "op": "PUSH2",
      "value": "0x4A8"
    },
    "1187": {
      "op": "JUMPI"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1190": {
      "op": "DUP1"
    },
    "1191": {
      "op": "REVERT"
    },
    "1192": {
      "op": "JUMPDEST"
    },
    "1193": {
      "op": "DUP2"
    },
    "1194": {
      "op": "MLOAD"
    },
    "1195": {
      "op": "DUP1"
    },
    "1196": {
      "op": "ISZERO"
    },
    "1197": {
      "op": "ISZERO"
    },
    "1198": {
      "op": "DUP2"
    },
    "1199": {
      "op": "EQ"
    },
    "1200": {
      "op": "PUSH2",
      "value": "0x476"
    },
    "1203": {
      "op": "JUMPI"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1206": {
      "op": "DUP1"
    },
    "1207": {
      "op": "REVERT"
    }
  },
  "sha1": "9e531e161c919b2040294af62dcc88d6a796c861",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n\ncontract TokenSwap {\n    IERC20 public token1;\n    address public owner1;\n    uint public amount1;\n    IERC20 public token2;\n    address public owner2;\n    uint public amount2;\n\n    constructor(\n        address _token1,\n        address _owner1,\n        uint _amount1,\n        address _token2,\n        // address _owner2,\n        uint _amount2\n    ) {\n        token1 = IERC20(_token1);\n        owner1 = _owner1;\n        amount1 = _amount1;\n        token2 = IERC20(_token2);\n        // owner2 = _owner2;\n        amount2 = _amount2;\n    }\n\n    function getOwner2Address(address _addr) public {\n        owner2 = _addr;\n    }\n\n    function swap() public {\n        require(msg.sender == owner2, \"Not authorized\");\n        require(\n            token1.allowance(owner1, address(this)) >= amount1,\n            \"Token 1 allowance too low\"\n        );\n        require(\n            token2.allowance(owner2, address(this)) >= amount2,\n            \"Token 2 allowance too low\"\n        );\n\n        _safeTransferFrom(token1, owner1, owner2, amount1);\n        _safeTransferFrom(token2, owner2, owner1, amount2);\n    }\n\n    function _safeTransferFrom(\n        IERC20 token,\n        address sender,\n        address recipient,\n        uint amount\n    ) private {\n        bool sent = token.transferFrom(sender, recipient, amount);\n        require(sent, \"Token transfer failed\");\n    }\n}",
  "sourceMap": "116:1363:1:-:0;;;298:353;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;475:6;:24;;-1:-1:-1;;;;;;475:24:1;;;-1:-1:-1;;;;;475:24:1;;;;;;;-1:-1:-1;509:16:1;;;;;;;;;;;;;;535:7;:18;;;;563:6;:24;;;;;;;;;;;;;626:7;:18;116:1363;;14:177:2;93:13;;-1:-1:-1;;;;;135:31:2;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:502::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;427:40;457:9;427:40;:::i;:::-;417:50;;486:49;531:2;520:9;516:18;486:49;:::i;:::-;476:59;;575:2;564:9;560:18;554:25;544:35;;598:49;643:2;632:9;628:18;598:49;:::i;:::-;588:59;;687:3;676:9;672:19;666:26;656:36;;196:502;;;;;;;;:::o;:::-;116:1363:1;;;;;;",
  "sourcePath": "contracts/TokenSwap.sol",
  "type": "contract"
}